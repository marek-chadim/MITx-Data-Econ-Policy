{smcl}
{txt}{...}
{pstd}{c TLC}{hline 43}{c TRC}{break}
{bf}{...}
{c |}{view `""Stata 103.smcl""': Innovations for Poverty Action{space 12}}{c |}{break}
{c |}{view `""Stata 103.smcl""': The Abdul Latif Jameel Poverty Action Lab{space 1}}{c |}{break}
{c |}{view `""Stata 103.smcl""':{space 43}}{c |}{break}
{c |}{view `""Stata 103.smcl""': Staff Training{space 28}}{c |}{break}
{c |}{view `""Stata 103.smcl""': Stata 103{space 33}}{c |}{break}
{sf}{...}
{c BLC}{hline 43}{c BRC}

{pstd}{bf:For-Loops and Macros}{break}
{it:Problem set answers}{break}

{pstd}{view `""SMCL/Problem sets/Concepts answers/For-Loops and Macros - answers.smcl"##q1"':Question 1}{break}
{view `""SMCL/Problem sets/Concepts answers/For-Loops and Macros - answers.smcl"##q2"':Question 2}{break}
{view `""SMCL/Problem sets/Concepts answers/For-Loops and Macros - answers.smcl"##q3"':Question 3}{break}


{hline}{marker q1}

{pstd}{bf:Answer to Question 1}

{hline}

{pstd}{bf:{stata `"use "Raw/Stata 103", clear"'}}{p_end}

{pstd}{it}{...} Loop over these values of variable {cmd:castename}:
{cmd:"hami"}, {cmd:"jain"}, and {cmd:"rawat"}.
For each of these castes,
{cmd:summarize} the variables {cmd:sex}, {cmd:age}, and {cmd:educ}.
{txt}{sf}{ul off}{...}

{pstd}{cmd}foreach caste in hami jain rawat {{txt}{p_end}
{pmore}{cmd}summarize sex age educ if castename == "`caste'"{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 1"':Click here to execute.}

{pstd}It may have been tempting to use two loops instead:

{pstd}{cmd}foreach caste in hami jain rawat {{txt}{p_end}
{pmore}{cmd}foreach var of varlist sex age educ {{txt}{p_end}
{pmore2}{cmd}summarize `var' if castename == "`caste'"{txt}{p_end}
{pmore}{cmd}}{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 2"':Click here to execute.}

{pstd}However, this is unnecessary,
because you can {cmd:summarize} multiple variables at once.
As useful as they are,
you should usually avoid loops when a one-line command is possible.

{pstd}In the output from the first loop,
it's hard to tell which {cmd:summarize} goes with which caste.
To address this, we can {cmd:display} the caste name before {cmd:summarize}:

{pstd}{cmd}foreach caste in hami jain rawat {{txt}{p_end}
{pmore}{cmd}display "`caste'"{txt}{p_end}
{pmore}{cmd}summarize sex age educ if castename == "`caste'"{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 3"':Click here to execute.}

{hline}{marker q2}

{pstd}{bf:Answer to Question 2}

{hline}

{pstd}{bf:{stata `"use "Raw/Stata 103", clear"'}}{p_end}

{pstd}{it}{...} Variable {cmd:castecode} is categorical: it can be one of a fixed set of values.

{pstd}{bf:{stata `"tabulate castecode"'}}{p_end}

{pstd}{it}{...} {cmd:castecode} is {helpb label:value labeled}:

{pstd}{bf:{stata `"tabulate castecode, nolabel"'}}{p_end}
{pstd}{txt}{sf}{ul off}{...}

{pstd}{it}{...} {bf:(a)}

{pstd}Create a dummy variable named {cmd:castecode1} for the {cmd:General} caste.
If {cmd:castecode} is {cmd:1} ({cmd:General}), {cmd:castecode1} should equal {cmd:1}.
If {cmd:castecode} is another caste, {cmd:castecode1} should equal {cmd:0}.
If {cmd:castecode} is missing, {cmd:castecode1} should also be missing.
{txt}{sf}{ul off}{...}

{pstd}One method with which you are likely familiar:

{pstd}{bf:{stata `"generate castecode1 = 1 if castecode == 1 & castecode != ."'}}{p_end}
{pstd}{bf:{stata `"replace castecode1 = 0 if castecode != 1 & castecode != ."'}}{p_end}

{pstd}A simpler method is to take advantage of logical expressions:{p_end}
{pstd}{bf:{stata `"generate castecode1_1 = castecode == 1 if castecode != ."'}}{p_end}

{pstd}See the module on view {view `""SMCL/Concepts/Logical Expressions and Dummy Variables.smcl""':logical expressions} for more on this method of creating dummy variables.

{pstd}{it}{...} {bf:(b)}

{pstd}Reload the dataset:

{pstd}{bf:{stata `"use "Raw/Stata 103", clear"'}}{p_end}

{pstd}{it}{...} Use a for-loop to create a dummy variable for each of the six castes.
{txt}{sf}{ul off}{...}

{pstd}{cmd}foreach i of numlist 1/6 {{txt}{p_end}
{pmore}{cmd}generate castecode`i' = castecode == `i' if castecode != .{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 4"':Click here to execute.}

{hline}{marker q3}

{pstd}{bf:Answer to Question 3}

{hline}

{pstd}{bf:{stata `"use "Raw/Stata 103", clear"'}}{p_end}

{pstd}{it}{...} For many crimes in the dataset,
there is information about which household members were victims.
For example, household members with these IDs
were victims of cycle theft:

{pstd}{bf:{stata `"tabulate cycletheftvictim_1"'}}{p_end}
{pstd}{bf:{stata `"tabulate cycletheftvictim_2"'}}{p_end}
{pstd}{txt}{sf}{ul off}{...}

{pstd}{it}{...} {bf:(a)}

{pstd}Create a dummy variable named {cmd:cycletheft1} for whether household member {cmd:1}
was a victim of cycle theft.
{txt}{sf}{ul off}{...}

{pstd}We can use logical expressions to create the variable with a single command:

{pstd}{bf:{stata `"generate cycletheft1 = cycletheftvictim_1 == 1 | cycletheftvictim_2 == 1"'}}{p_end}

{pstd}{it}{...} {bf:(b)}

{pstd}Victim information is available for these crimes:
{cmd:cycletheft robbery theft molestation eveteasing attack extortion assault falsecase othercrime}.
Each crime has two victim variables so that households can list multiple victims.
For example, cycle theft had two victim variables:
{cmd:cycletheftvictim_1} and {cmd:cycletheftvictim_2}.

{pstd}Create a dummy variable named {cmd:anycrime1} for whether household member {cmd:1}
was the victim of any crime.
To do this, loop through all crimes.
{txt}{sf}{ul off}{...}

{pstd}{bf:{stata `"generate anycrime1 = 0"'}}{p_end}

{pstd}{cmd}foreach crime in cycletheft robbery theft molestation eveteasing attack extortion assault falsecase othercrime {{txt}{p_end}
{pmore}{cmd}replace anycrime1 = 1 if `crime'victim_1 == 1 | `crime'victim_2 == 1{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 5"':Click here to execute.}

{pstd}{it}{...} {bf:(c)}

{pstd}Loop through all crimes.
For each crime, first {cmd:display} the crime.
Then {cmd:tabulate} the two victim variables for the crime.
What is the maximum household member number
among members who were victims?
{txt}{sf}{ul off}{...}

{pstd}{cmd}foreach crime in cycletheft robbery theft molestation eveteasing attack extortion assault falsecase othercrime {{txt}{p_end}
{pmore}{cmd}display "`crime'"{txt}{p_end}
{pmore}{cmd}tabulate `crime'victim_1{txt}{p_end}
{pmore}{cmd}tabulate `crime'victim_2{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 6"':Click here to execute.}

{pstd}The maximum household member number among members who were victims was {cmd:8}.

{pstd}{it}{...} {bf:(d)}

{pstd}Reload the dataset:

{pstd}{bf:{stata `"use "Raw/Stata 103", clear"'}}{p_end}

{pstd}{it}{...} For each household member with member number {cmd:1} through the maximum
(determined in part {cmd:(c)}),
create a dummy variable for whether the household member
was a victim of any crime.
{txt}{sf}{ul off}{...}

{pstd}{cmd}foreach i of numlist 1/8 {{txt}{p_end}
{pmore}{cmd}generate anycrime`i' = 0{txt}{p_end}
{pmore}{cmd}foreach crime in cycletheft robbery theft molestation eveteasing attack extortion assault falsecase othercrime {{txt}{p_end}
{pmore2}{cmd}replace anycrime`i' = 1 if `crime'victim_1 == `i' | `crime'victim_2 == `i'{txt}{p_end}
{pmore}{cmd}}{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 7"':Click here to execute.}

{pstd}{it}{...} {bf:(e)}

{pstd}Using the dummy variables from part {cmd:(d)},
create a variable named {cmd:nvictims}
that equals the number of unique victims in the household.
For example, if household members {cmd:1} and {cmd:3}
were victims, then {cmd:nvictims} should equal {cmd:2}.
This is the case whether household member {cmd:1} experienced
one crime or 10.

{pstd}Using {cmd:nvictims} and information from a household roster,
we could estimate what fraction of the sample was a victim of any of these crimes.
{txt}{sf}{ul off}{...}

{pstd}{cmd}generate nvictims = 0{txt}{p_end}
{pstd}{cmd}foreach i of numlist 1/8 {{txt}{p_end}
{pmore}{cmd}replace nvictims = nvictims + anycrime`i'{txt}{p_end}
{pstd}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Problem sets/Concepts answers/For-Loops and Macros - answers.do" 8"':Click here to execute.}


{hline}

{pstd}{view `""SMCL/Problem sets/Concepts/For-Loops and Macros - problem set.smcl""':Problem set}{break}
Return to Module: {view `""SMCL/Concepts/For-Loops and Macros.smcl""':For-Loops and Macros}{break}

{pstd}{view `""Stata 103.smcl""':Stata 103 Start}{break}
